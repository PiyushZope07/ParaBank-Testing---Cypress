{
  "stats": {
    "suites": 6,
    "tests": 30,
    "passes": 27,
    "pending": 0,
    "failures": 3,
    "testsRegistered": 30,
    "passPercent": 90,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false,
    "start": "2023-04-27T07:15:36.972Z",
    "end": "2023-04-27T08:54:56.261Z",
    "duration": 5959289
  },
  "results": [
    {
      "uuid": "4a82130a-8b62-4c78-88d4-a8e836b8f738",
      "title": "",
      "fullFile": "cypress\\e2e\\ParaBankTest\\Login.cy.js",
      "file": "cypress\\e2e\\ParaBankTest\\Login.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "b98df0fe-7aeb-4067-a349-163c9109bac8",
          "title": "Login Of ParaBank User",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": " User is able to Login with Correct Credentials",
              "fullTitle": "Login Of ParaBank User  User is able to Login with Correct Credentials",
              "timedOut": null,
              "duration": 9248,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//use data from fixture file\ncy.fixture('Login.json').then(log => {\n  const login = new _Login.default();\n  //Enter Credentials for Login\n  login.setUserName(log.username);\n  login.setPassword(log.password);\n  //Click on Login Button\n  login.clickLogin();\n  //validate sucess Login after Weclome is visible\n  login.validateLoginWithWelcome();\n});",
              "err": {},
              "uuid": "1e20626d-a4f7-4d26-8ba3-decaf8ac804a",
              "parentUUID": "b98df0fe-7aeb-4067-a349-163c9109bac8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " User is able to Login with Incorrect Credentials",
              "fullTitle": "Login Of ParaBank User  User is able to Login with Incorrect Credentials",
              "timedOut": null,
              "duration": 10151,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "//use data from fixture file\ncy.fixture('Login.json').then(log => {\n  const login = new _Login.default();\n  //Enter Credentials for Login\n  login.setUserName(\"abc\");\n  login.setPassword(\"abc\");\n  //Click on Login Button\n  login.clickLogin();\n  //validate user is home page because credentials are incorrect\n  login.validateLoginWithWelcome();\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.smallText > b`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `.smallText > b`, but never found it.\n    at Login.validateLoginWithWelcome (webpack:///./cypress/e2e/ParaBankPOM/Login.js:23:44)\n    at Context.eval (webpack:///./cypress/e2e/ParaBankTest/Login.cy.js:45:18)",
                "diff": null
              },
              "uuid": "6bbb3603-a670-4cc0-b6c5-ce0bb7491774",
              "parentUUID": "b98df0fe-7aeb-4067-a349-163c9109bac8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User is not able to Login with Empty Fields.",
              "fullTitle": "Login Of ParaBank User User is not able to Login with Empty Fields.",
              "timedOut": null,
              "duration": 4911,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//use data from fixture file\ncy.fixture('Login.json').then(log => {\n  const login = new _Login.default();\n  //Click on Login Button\n  login.clickLogin();\n  //validate user is home page because input fields are empty\n  login.validateIncorrectLogin();\n});",
              "err": {},
              "uuid": "83c8b936-b862-483f-853b-a286c5d1fe72",
              "parentUUID": "b98df0fe-7aeb-4067-a349-163c9109bac8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1e20626d-a4f7-4d26-8ba3-decaf8ac804a",
            "83c8b936-b862-483f-853b-a286c5d1fe72"
          ],
          "failures": [
            "6bbb3603-a670-4cc0-b6c5-ce0bb7491774"
          ],
          "pending": [],
          "skipped": [],
          "duration": 24310,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "0c438c62-9209-4dd6-8aa3-63ecd9a0d5fc",
      "title": "",
      "fullFile": "cypress\\e2e\\ParaBankTest\\RedirectableLinks.cy.js",
      "file": "cypress\\e2e\\ParaBankTest\\RedirectableLinks.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "46d4f591-4cb1-470d-ba06-a43625dbd022",
          "title": "Redirectable Links",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test that \"www.parasoft.com\" link is Redirectable or not available in About US Page",
              "fullTitle": "Redirectable Links Test that \"www.parasoft.com\" link is Redirectable or not available in About US Page",
              "timedOut": null,
              "duration": 4196,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const red = new _RedirectableLinks.default();\n//Click on About Us Link\nred.clickAboutUsLink();\n//Validate title of page means if  title includes about us text then we can log that link is redirectale\nred.validateAboutUsLink();",
              "err": {},
              "uuid": "3dd72a67-2994-4d63-ab77-cb851d97bfe5",
              "parentUUID": "46d4f591-4cb1-470d-ba06-a43625dbd022",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test that \"BookStore\" links href link is working or not",
              "fullTitle": "Redirectable Links Test that \"BookStore\" links href link is working or not",
              "timedOut": null,
              "duration": 4078,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const red = new _RedirectableLinks.default();\n//Click on Services Link of Home Page\nred.clickServicesLink();\n//check whether BooKStore link is working or not\nred.validateBookStoreLink();",
              "err": {},
              "uuid": "d800e042-f339-49be-8f05-983a5007de05",
              "parentUUID": "46d4f591-4cb1-470d-ba06-a43625dbd022",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test that \"LoanProcessorService\" href link is working or not",
              "fullTitle": "Redirectable Links Test that \"LoanProcessorService\" href link is working or not",
              "timedOut": null,
              "duration": 4276,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const red = new _RedirectableLinks.default();\n//Click on Services Link of Home Page\nred.clickServicesLink();\n//check whether Loan Processor link is working or not\nred.validateLoanProcessorLink();",
              "err": {},
              "uuid": "4b31ae5c-074e-40e1-9e8d-73ef6b3d3e1c",
              "parentUUID": "46d4f591-4cb1-470d-ba06-a43625dbd022",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test that \"ParaBankService\" href link is working or not",
              "fullTitle": "Redirectable Links Test that \"ParaBankService\" href link is working or not",
              "timedOut": null,
              "duration": 3228,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const red = new _RedirectableLinks.default();\n//Click on Services Link of Home Page\nred.clickServicesLink();\n//check whether ParaBankService link is working or not\nred.validateParaBankServiceLink();",
              "err": {},
              "uuid": "8d61c749-5a43-4d5d-88c7-3d6606e1e868",
              "parentUUID": "46d4f591-4cb1-470d-ba06-a43625dbd022",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test that \"WADL\" href link is working or not",
              "fullTitle": "Redirectable Links Test that \"WADL\" href link is working or not",
              "timedOut": null,
              "duration": 4890,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const red = new _RedirectableLinks.default();\n//Click on Services Link of Home Page\nred.clickServicesLink();\n//check whether WADL link is working or not\nred.validateWADLLink();",
              "err": {},
              "uuid": "dcd2a5f4-c5e2-46f9-876d-75dd655b55a9",
              "parentUUID": "46d4f591-4cb1-470d-ba06-a43625dbd022",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test that \"SWAGGER\" href link is working or not",
              "fullTitle": "Redirectable Links Test that \"SWAGGER\" href link is working or not",
              "timedOut": null,
              "duration": 4279,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const red = new _RedirectableLinks.default();\n//Click on Services Link of Home Page\nred.clickServicesLink();\n//check whether SWAGGER link is working or not\nred.validateSwaggerLink();",
              "err": {},
              "uuid": "0935ffae-0788-41fc-97ad-707466c99b9f",
              "parentUUID": "46d4f591-4cb1-470d-ba06-a43625dbd022",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3dd72a67-2994-4d63-ab77-cb851d97bfe5",
            "d800e042-f339-49be-8f05-983a5007de05",
            "4b31ae5c-074e-40e1-9e8d-73ef6b3d3e1c",
            "8d61c749-5a43-4d5d-88c7-3d6606e1e868",
            "dcd2a5f4-c5e2-46f9-876d-75dd655b55a9",
            "0935ffae-0788-41fc-97ad-707466c99b9f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 24947,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "6d612458-d56f-4e6c-9624-840da9a3624d",
      "title": "",
      "fullFile": "cypress\\e2e\\ParaBankTest\\ForgotLoginInfo.cy.js",
      "file": "cypress\\e2e\\ParaBankTest\\ForgotLoginInfo.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f974cd3a-f15f-4279-a510-ca21f689fa13",
          "title": "Find Login Information of User",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "User is able to Find Login Information By Entering Correct Details",
              "fullTitle": "Find Login Information of User User is able to Find Login Information By Entering Correct Details",
              "timedOut": null,
              "duration": 8740,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//use data from fixture file\ncy.fixture('ForgotLoginInfo.json').then(floginfo => {\n  const findlogin = new _ForgotLoginInfo.default();\n  //Click on Forgot Login Info Button \n  findlogin.ClickForgotLoginInfoButton();\n  //Enter Details for Finding Login Information\n  findlogin.setFirstName(floginfo.firstname);\n  findlogin.setLastName(floginfo.lastname);\n  findlogin.setAddress(floginfo.address);\n  findlogin.setCity(floginfo.city);\n  findlogin.setState(floginfo.state);\n  findlogin.setZipCode(floginfo.zipcode);\n  findlogin.setSSN(floginfo.ssn);\n  //Click on Find Login Button\n  findlogin.ClickFindLoginButton();\n  //Validate login deatils searched.\n  findlogin.ValidateLoginInfo();\n});",
              "err": {},
              "uuid": "43f72928-470d-4940-bd7e-31b2be80d8d6",
              "parentUUID": "f974cd3a-f15f-4279-a510-ca21f689fa13",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " User is able to Find Login Information without Entering SSN Number",
              "fullTitle": "Find Login Information of User  User is able to Find Login Information without Entering SSN Number",
              "timedOut": null,
              "duration": 6658,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//use data from fixture file\ncy.fixture('ForgotLoginInfo.json').then(floginfo => {\n  const findlogin = new _ForgotLoginInfo.default();\n  //Click on Forgot Login Info Button\n  findlogin.ClickForgotLoginInfoButton();\n  //Enter Details for Finding Login Information\n  findlogin.setFirstName(floginfo.firstname);\n  findlogin.setLastName(floginfo.lastname);\n  findlogin.setAddress(floginfo.address);\n  findlogin.setCity(floginfo.city);\n  findlogin.setState(floginfo.state);\n  findlogin.setZipCode(floginfo.zipcode);\n  findlogin.setSSN(floginfo.emptyssn);\n  //Click on Find Login Button\n  findlogin.ClickFindLoginButton();\n  //Validate login deatils searched.\n  findlogin.ValidateLoginInfo();\n});",
              "err": {},
              "uuid": "adf6e233-e7db-44ce-ba2a-0faaa06ce6f6",
              "parentUUID": "f974cd3a-f15f-4279-a510-ca21f689fa13",
              "isHook": false,
              "skipped": false
            },
            {
              "title": " User is not able to Find Login Information with Empty Fields",
              "fullTitle": "Find Login Information of User  User is not able to Find Login Information with Empty Fields",
              "timedOut": null,
              "duration": 3951,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//use data from fixture file\ncy.fixture('ForgotLoginInfo.json').then(floginfo => {\n  const findlogin = new _ForgotLoginInfo.default();\n  //Click on Forgot Login Info Button\n  findlogin.ClickForgotLoginInfoButton();\n  //Click on Find Login Button\n  findlogin.ClickFindLoginButton();\n  //If regitser Button is visible on Home Page User is not able to Find Login Information with Empty Field\n  findlogin.validateEmptyFindLogin();\n});",
              "err": {},
              "uuid": "b208a3ae-52da-47a4-903c-58da10c55ffd",
              "parentUUID": "f974cd3a-f15f-4279-a510-ca21f689fa13",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "43f72928-470d-4940-bd7e-31b2be80d8d6",
            "adf6e233-e7db-44ce-ba2a-0faaa06ce6f6",
            "b208a3ae-52da-47a4-903c-58da10c55ffd"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 19349,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "131d82e3-aed4-4b09-aa64-5d7b438d4fbc",
      "title": "",
      "fullFile": "cypress\\e2e\\ParaBankTest\\AdminPage.cy.js",
      "file": "cypress\\e2e\\ParaBankTest\\AdminPage.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "af1e2362-0f63-47b0-a2ee-19a0b84eb64d",
          "title": "Admin Page",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test Whether Database has been initialized or not",
              "fullTitle": "Admin Page Test Whether Database has been initialized or not",
              "timedOut": null,
              "duration": 9052,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Click on Admin Page link\nadmin.clickAdminPageLink();\n//Click on Initialize Button\nadmin.clickInitializeButton();\n//Validate Database Initialize Text Result is matching with current \nadmin.validateIntializeButton();",
              "err": {},
              "uuid": "a2381723-5cb6-4d5a-a0be-f498befeea23",
              "parentUUID": "af1e2362-0f63-47b0-a2ee-19a0b84eb64d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test Whether Database has been Cleaned or not",
              "fullTitle": "Admin Page Test Whether Database has been Cleaned or not",
              "timedOut": null,
              "duration": 5163,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Click on Admin Page link\nadmin.clickAdminPageLink();\n//Click on Clean Button\nadmin.clickCleanButton();\n//Validate Database Clean Text Result is matching with current \nadmin.validateCleanButton();",
              "err": {},
              "uuid": "3ed3c8f1-4c94-4e72-ae64-9d184212fddf",
              "parentUUID": "af1e2362-0f63-47b0-a2ee-19a0b84eb64d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify whether JMS Service is Running or not",
              "fullTitle": "Admin Page Verify whether JMS Service is Running or not",
              "timedOut": null,
              "duration": 7411,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Click on Admin Page link\nadmin.clickAdminPageLink();\n// Clicking on JMS Start and Shut Button if it is visible then we are vaidating that\nadmin.JMS();",
              "err": {},
              "uuid": "676d362e-7ce3-4ce6-bca1-35902e0ef1f9",
              "parentUUID": "af1e2362-0f63-47b0-a2ee-19a0b84eb64d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test Whether Data Access Mode Checkbox is working or not",
              "fullTitle": "Admin Page Test Whether Data Access Mode Checkbox is working or not",
              "timedOut": null,
              "duration": 3636,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//Click on Admin Page link\nadmin.clickAdminPageLink();\n//Selecting a soap radiobutton ad validating whether it is checked or not\nadmin.SoapAccessCheckBox();\n//Selecting a rest xml radiobutton ad validating whether it is checked or not\nadmin.RestXmlCheckBox();\n//Selecting a rest json radiobutton ad validating whether it is checked or not\nadmin.RestJsonCheckBox();\n//Selecting a jdbc radiobutton ad validating whether it is checked or not\nadmin.JdbcCheckBox();",
              "err": {},
              "uuid": "711bca63-47e7-41ce-ba54-3305d7f5e285",
              "parentUUID": "af1e2362-0f63-47b0-a2ee-19a0b84eb64d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test Whether settings are saving sucessfully or not in Admin Page",
              "fullTitle": "Admin Page Test Whether settings are saving sucessfully or not in Admin Page",
              "timedOut": null,
              "duration": 6282,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//use data from fixture file\ncy.fixture('Admin.json').then(log => {\n  //Click on Admin Page link\n  admin.clickAdminPageLink();\n  //Click on Initialize Button\n  admin.clickInitializeButton();\n  //Selecting a rest json radiobutton ad validating whether it is checked or not\n  admin.RestJsonCheckBox();\n  //Enter Initial Balanace and Minimum balance for Configuration\n  admin.setInitBalance(log.initbal);\n  admin.setMinimumBalance(log.minbal);\n  //Select JMS from LoanProvider Dropdown\n  admin.LoanProviderDropdown();\n  //Select Available Funds  from LoanProcessor Dropdown\n  admin.LoanProcessorDropdown();\n  //Click on Submit Button to submit Admin Settings\n  admin.SubmitAdmin();\n  //Validating Settings Saved Sucessfully\n  admin.ValidatingSettingSuccess();\n});",
              "err": {},
              "uuid": "e525e9fa-93da-45f3-95bf-34aefefc6db3",
              "parentUUID": "af1e2362-0f63-47b0-a2ee-19a0b84eb64d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a2381723-5cb6-4d5a-a0be-f498befeea23",
            "3ed3c8f1-4c94-4e72-ae64-9d184212fddf",
            "676d362e-7ce3-4ce6-bca1-35902e0ef1f9",
            "711bca63-47e7-41ce-ba54-3305d7f5e285",
            "e525e9fa-93da-45f3-95bf-34aefefc6db3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 31544,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "58d1dfaa-7796-4680-958e-7295d2d11e69",
      "title": "",
      "fullFile": "cypress\\e2e\\ParaBankTest\\AccountServices.cy.js",
      "file": "cypress\\e2e\\ParaBankTest\\AccountServices.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "859550a3-32d8-497a-8061-33dff434a5ff",
          "title": "Account Services",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test Whether that User is able to open New Checked Account",
              "fullTitle": "Account Services Test Whether that User is able to open New Checked Account",
              "timedOut": null,
              "duration": 11981,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//use data from fixture file\ncy.fixture('AccountServices.json').then(acc => {\n  //Click on Register Button on Home Page\n  register.ClickRegisterButtonHome();\n  //Enter the Details for registration\n  register.setFirstName(acc.firstname);\n  register.setLastName(acc.lastname);\n  register.setAddress(acc.address);\n  register.setCity(acc.city);\n  register.setState(acc.state);\n  register.setZipCode(acc.zipcode);\n  register.setPhoneNumber(acc.phonenumber);\n  register.setSSN(acc.ssn);\n  register.setUserName(acc.username);\n  register.setPassword(acc.password);\n  register.setRepeatedPassword(acc.rpassword);\n  //Click in Register Button on register Page\n  register.ClickRegisterButton();\n  //Validate Account is registered Sucessfully or not\n  register.ValidateAfterSucessFullRegister();\n  //Click on Open Account\n  accser.clickOpenAccount();\n  //Select Checking Account from Account type Dropdown\n  accser.selectCheckingAccountType();\n  //Click on Open Account Button\n  accser.clickOpenAccountButton();\n  //Validate Account Created Sucessfully\n  accser.ValidateCheckingAccouuntText();\n});",
              "err": {},
              "uuid": "31e7aad9-1dab-4df8-961f-5c3e3ea28c6b",
              "parentUUID": "859550a3-32d8-497a-8061-33dff434a5ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test  Whether that User is able to open New Savings Account.",
              "fullTitle": "Account Services Test  Whether that User is able to open New Savings Account.",
              "timedOut": null,
              "duration": 8538,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//use data from fixture file\ncy.fixture('AccountServices.json').then(acc => {\n  //Enter Credentials for Login\n  login.setUserName(acc.usernamelog);\n  login.setPassword(acc.passwordlog);\n  //Click on Login Button\n  login.clickLogin();\n  //validate sucess Login after Weclome is visible\n  login.validateLoginWithWelcome();\n  //Click on Open Account\n  accser.clickOpenAccount();\n  //Select Checking Account from Account type Dropdown\n  accser.selectSavingsAccountType();\n  //Click on Open Account Button\n  accser.clickOpenAccountButton();\n  //Validate Account Created Sucessfully\n  accser.ValidateCheckingAccouuntText();\n});",
              "err": {},
              "uuid": "9cf31e9d-3625-4410-87dd-7fc06ef70fc6",
              "parentUUID": "859550a3-32d8-497a-8061-33dff434a5ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test Whether that User is able to Transfer the Funds From One Account to Another",
              "fullTitle": "Account Services Test Whether that User is able to Transfer the Funds From One Account to Another",
              "timedOut": null,
              "duration": 11657,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//use data from fixture file\ncy.fixture('AccountServices.json').then(acc => {\n  //Enter Credentials for Login\n  login.setUserName(acc.usernamelog);\n  login.setPassword(acc.passwordlog);\n  //Click on Login Button\n  login.clickLogin();\n  //validate sucess Login after Weclome is visible\n  login.validateLoginWithWelcome();\n  //Click on Transfer Fund\n  accser.clickTransferFund();\n  cy.wait(3000);\n  //Select Transfer Account\n  accser.SelectTransferAccount();\n  //Enter Transfer Amount\n  accser.TransferAmount(acc.transferamount);\n  //Click on Transfer Button\n  accser.ClickTransferButton();\n  //Validate Transfer Success text\n  accser.ValidateTransferText();\n});",
              "err": {},
              "uuid": "c9091460-8fbb-4d73-a35e-f63d8c0f69c9",
              "parentUUID": "859550a3-32d8-497a-8061-33dff434a5ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test Whether that User is able to Pay the Bill From One Account to Another",
              "fullTitle": "Account Services Test Whether that User is able to Pay the Bill From One Account to Another",
              "timedOut": null,
              "duration": 9410,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//use data from fixture file\ncy.fixture('AccountServices.json').then(acc => {\n  //Enter Credentials for Login\n  login.setUserName(acc.usernamelog);\n  login.setPassword(acc.passwordlog);\n  //Click on Login Button\n  login.clickLogin();\n  //validate sucess Login after Weclome is visible\n  login.validateLoginWithWelcome();\n  //Click on Bill Pay Link\n  accser.clickBillPay();\n  //Enter Payee Details\n  accser.setPayeeName(acc.payeename);\n  accser.setPayeeAddress(acc.payeeaddress);\n  accser.setPayeeCity(acc.payeecity);\n  accser.setPayeeState(acc.payeestate);\n  accser.setPayeeZipCode(acc.payeezipcode);\n  accser.setPayeePhoneNumber(acc.payeephone);\n  accser.setPayeeAccount(acc.payeeaccount);\n  accser.setPayeeVerifyAccount(acc.payeeverifyaccount);\n  accser.setPayeeAmmount(acc.payeeamount);\n  //Select Account to send Payment\n  accser.selectPayeeFromAccount();\n  //Click on Send Payment Button\n  accser.clickSendPayment();\n  //Validate Bill Payment Success text that bill payment is completed.\n  accser.ValidateBillPaymentText();\n});",
              "err": {},
              "uuid": "fbbf3a45-da4e-4bce-86ab-650bdae9dbc9",
              "parentUUID": "859550a3-32d8-497a-8061-33dff434a5ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test Whether that User is able to Find the Trascation by ID",
              "fullTitle": "Account Services Test Whether that User is able to Find the Trascation by ID",
              "timedOut": null,
              "duration": 4869,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//use data from fixture file\ncy.fixture('AccountServices.json').then(acc => {\n  //Enter Credentials for Login\n  login.setUserName(acc.usernamelog);\n  login.setPassword(acc.passwordlog);\n  //Click on Login Button\n  login.clickLogin();\n  //validate sucess Login after Weclome is visible\n  login.validateLoginWithWelcome();\n  //Click on Find Transcation Link\n  accser.ClickFindTransaction();\n  //Enter ID of Transcation \n  accser.SetTransactionID(acc.transactionid);\n  //Click on Find Transaction  Of ID button\n  accser.ClickFindTransactionID();\n  //Valdate Results\n  accser.ValidateTranscationResults();\n});",
              "err": {},
              "uuid": "9fb14e2b-a532-4e82-bd8d-de7b9cafe36b",
              "parentUUID": "859550a3-32d8-497a-8061-33dff434a5ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test Whether that User is able to Find the Trascation by Date",
              "fullTitle": "Account Services Test Whether that User is able to Find the Trascation by Date",
              "timedOut": null,
              "duration": 5089,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//use data from fixture file\ncy.fixture('AccountServices.json').then(acc => {\n  //Enter Credentials for Login\n  login.setUserName(acc.usernamelog);\n  login.setPassword(acc.passwordlog);\n  //Click on Login Button\n  login.clickLogin();\n  //validate sucess Login after Weclome is visible\n  login.validateLoginWithWelcome();\n  //Click on Find Transcation Link\n  accser.ClickFindTransaction();\n  //Enter Date of Transcation \n  accser.SetTransactionDate(acc.transactiondate);\n  //Click on Find Transaction  Of Date button\n  accser.ClickFindTransactionDate();\n  //Valdate Results\n  accser.ValidateTranscationResults();\n});",
              "err": {},
              "uuid": "916f0ff5-cee0-4bb4-b382-8d68bc1db0e5",
              "parentUUID": "859550a3-32d8-497a-8061-33dff434a5ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test Whether that User is able to Find the Trascation by Date Range",
              "fullTitle": "Account Services Test Whether that User is able to Find the Trascation by Date Range",
              "timedOut": null,
              "duration": 5012,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//use data from fixture file\ncy.fixture('AccountServices.json').then(acc => {\n  //Enter Credentials for Login\n  login.setUserName(acc.usernamelog);\n  login.setPassword(acc.passwordlog);\n  //Click on Login Button\n  login.clickLogin();\n  //validate sucess Login after Weclome is visible\n  login.validateLoginWithWelcome();\n  //Click on Find Transcation Link\n  accser.ClickFindTransaction();\n  //Enter Date's of Transcation \n  accser.SetTransactionDateFromRange(acc.fromdaterange);\n  accser.SetTransactionDateToRange(acc.todaterange);\n  //Click on Find Transaction  Of Date Range button\n  accser.ClickFindTransactionDateRange();\n  //Valdate Results\n  accser.ValidateTranscationResults();\n});",
              "err": {},
              "uuid": "c97d0630-e1e6-4150-ba90-02f9152d0c10",
              "parentUUID": "859550a3-32d8-497a-8061-33dff434a5ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test Whether that User is able to Find the Trascation by Amount",
              "fullTitle": "Account Services Test Whether that User is able to Find the Trascation by Amount",
              "timedOut": null,
              "duration": 5007,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//use data from fixture file\ncy.fixture('AccountServices.json').then(acc => {\n  //Enter Credentials for Login\n  login.setUserName(acc.usernamelog);\n  login.setPassword(acc.passwordlog);\n  //Click on Login Button\n  login.clickLogin();\n  //validate sucess Login after Weclome is visible\n  login.validateLoginWithWelcome();\n  //Click on Find Transcation Link\n  accser.ClickFindTransaction();\n  //Enter Date's of Transcation \n  accser.SetTransactionAmount(acc.transactionamount);\n  //Click on Find Transaction Of Amount button\n  accser.ClickFindTransactionAmount();\n  //Valdate Results\n  accser.ValidateTranscationResults();\n});",
              "err": {},
              "uuid": "227ee047-bfaa-41b6-83e9-3e4463c02258",
              "parentUUID": "859550a3-32d8-497a-8061-33dff434a5ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test Whether that User is able to Update the Contact Information",
              "fullTitle": "Account Services Test Whether that User is able to Update the Contact Information",
              "timedOut": null,
              "duration": 6657,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//use data from fixture file\ncy.fixture('AccountServices.json').then(acc => {\n  //Enter Credentials for Login\n  login.setUserName(acc.usernamelog);\n  login.setPassword(acc.passwordlog);\n  //Click on Login Button\n  login.clickLogin();\n  //validate sucess Login after Weclome is visible\n  login.validateLoginWithWelcome();\n  //Click on Update Contact Info\n  accser.ClickUpdateContactInfo();\n  //Enter Updated Details\n  accser.setUpdateFirstName(acc.updatefname);\n  accser.setUpdateLastName(acc.updatelname);\n  accser.setUpdateAddress(acc.updateaddress);\n  accser.setUpdateCity(acc.updatecity);\n  accser.setUpdateState(acc.updatestate);\n  accser.setUpdateZipCode(acc.updatezipcode);\n  accser.setUpdatePhoneNumber(acc.updatepno);\n  //Click on Update Profile Button\n  accser.clickUpdateProfileButton();\n  //Validate Profile Text\n  accser.ValidateProfile();\n});",
              "err": {},
              "uuid": "9d189700-5c4d-4f24-9ffd-3166153d1d5d",
              "parentUUID": "859550a3-32d8-497a-8061-33dff434a5ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test Whether that User is able to Request the Loan",
              "fullTitle": "Account Services Test Whether that User is able to Request the Loan",
              "timedOut": null,
              "duration": 10799,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "//use data from fixture file\ncy.fixture('AccountServices.json').then(acc => {\n  //Click on Admin Page link\n  admin.clickAdminPageLink();\n  //Enter Initial Balanace and Minimum balance for Configuration\n  admin.setInitBalance(acc.initbal);\n  admin.setMinimumBalance(acc.minbal);\n  //Click on Submit Button to submit Admin Settings\n  admin.SubmitAdmin();\n  //Enter Credentials for Login\n  login.setUserName(acc.usernamelog);\n  login.setPassword(acc.passwordlog);\n  //Click on Login Button\n  login.clickLogin();\n  //validate sucess Login after Weclome is visible\n  login.validateLoginWithWelcome();\n  //Click on Request Loan\n  accser.ClickRequestLoan();\n  //Enter Loan Amount \n  accser.setLoanAmount(acc.loanamt);\n  //Enter Down Payment Amount \n  accser.setDownPayment(acc.downpayment);\n  //Click on Apply Now\n  accser.ClickApplyNow();\n  //Validate Request Loan\n  accser.ValidateLoan();\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[ng-if='showResult'] > div.ng-scope > :nth-child(1)`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[ng-if='showResult'] > div.ng-scope > :nth-child(1)`, but never found it.\n    at AccountServices.ValidateLoan (webpack:///./cypress/e2e/ParaBankPOM/AccountServices.js:292:11)\n    at Context.eval (webpack:///./cypress/e2e/ParaBankTest/AccountServices.cy.js:357:19)",
                "diff": null
              },
              "uuid": "037d97f3-0d3c-4507-aca3-4ee7916c5f96",
              "parentUUID": "859550a3-32d8-497a-8061-33dff434a5ff",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "31e7aad9-1dab-4df8-961f-5c3e3ea28c6b",
            "9cf31e9d-3625-4410-87dd-7fc06ef70fc6",
            "c9091460-8fbb-4d73-a35e-f63d8c0f69c9",
            "fbbf3a45-da4e-4bce-86ab-650bdae9dbc9",
            "9fb14e2b-a532-4e82-bd8d-de7b9cafe36b",
            "916f0ff5-cee0-4bb4-b382-8d68bc1db0e5",
            "c97d0630-e1e6-4150-ba90-02f9152d0c10",
            "227ee047-bfaa-41b6-83e9-3e4463c02258",
            "9d189700-5c4d-4f24-9ffd-3166153d1d5d"
          ],
          "failures": [
            "037d97f3-0d3c-4507-aca3-4ee7916c5f96"
          ],
          "pending": [],
          "skipped": [],
          "duration": 79019,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    },
    {
      "uuid": "0f62a5f5-5af6-446a-b633-d045ce9008ec",
      "title": "",
      "fullFile": "cypress\\e2e\\ParaBankTest\\Register.cy.js",
      "file": "cypress\\e2e\\ParaBankTest\\Register.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "cf65ab44-6afc-43e8-8dff-0a2abdc98024",
          "title": "Registration Of ParaBank User",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "User is able to Register by Entering Correct Details",
              "fullTitle": "Registration Of ParaBank User User is able to Register by Entering Correct Details",
              "timedOut": null,
              "duration": 11381,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//use data from fixture file\ncy.fixture('Register.json').then(reg => {\n  const register = new _Register.default();\n  //Click on Register Button on Home Page\n  register.ClickRegisterButtonHome();\n  //Enter the Details for registration\n  register.setFirstName(reg.firstname);\n  register.setLastName(reg.lastname);\n  register.setAddress(reg.address);\n  register.setCity(reg.city);\n  register.setState(reg.state);\n  register.setZipCode(reg.zipcode);\n  register.setPhoneNumber(reg.phonenumber);\n  register.setSSN(reg.ssn);\n  register.setUserName(reg.username);\n  register.setPassword(reg.password);\n  register.setRepeatedPassword(reg.rpassword);\n  //Click in Register Button on register Page\n  register.ClickRegisterButton();\n  //Validate Account is registered Sucessfully or not\n  register.ValidateAfterSucessFullRegister();\n});",
              "err": {},
              "uuid": "98a30afe-6c80-4c76-82e1-b217a913ad32",
              "parentUUID": "cf65ab44-6afc-43e8-8dff-0a2abdc98024",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User is able to Register Without Entering SSN Number ",
              "fullTitle": "Registration Of ParaBank User User is able to Register Without Entering SSN Number ",
              "timedOut": null,
              "duration": 11877,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "//use data from fixture file\ncy.fixture('Register.json').then(reg => {\n  const register = new _Register.default();\n  //Click on Register Button on Home Page\n  register.ClickRegisterButtonHome();\n  //Enter the Details for registration\n  register.setFirstName(reg.firstname);\n  register.setLastName(reg.lastname);\n  register.setAddress(reg.address);\n  register.setCity(reg.city);\n  register.setState(reg.state);\n  register.setZipCode(reg.zipcode);\n  register.setPhoneNumber(reg.phonenumber);\n  register.setUserName(reg.username);\n  register.setPassword(reg.password);\n  register.setRepeatedPassword(reg.rpassword);\n  //Click in Register Button on register Page\n  register.ClickRegisterButton();\n  //Validate that ssn error is visible\n  register.ValidateSSNErrors();\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: expected '<p>' to have text 'Your account was created successfully. You are now logged in.', but the text was 'If you have an account with us you can sign-up for free instant online access. You will have to provide some personal information.'",
                "estack": "AssertionError: Timed out retrying after 4000ms: expected '<p>' to have text 'Your account was created successfully. You are now logged in.', but the text was 'If you have an account with us you can sign-up for free instant online access. You will have to provide some personal information.'\n    at Register.ValidateSSNErrors (webpack:///./cypress/e2e/ParaBankPOM/Register.js:77:38)\n    at Context.eval (webpack:///./cypress/e2e/ParaBankTest/Register.cy.js:68:21)",
                "diff": "- 'If you have an account with us you can sign-up for free instant online access. You will have to provide some personal information.'\n+ 'Your account was created successfully. You are now logged in.'\n"
              },
              "uuid": "0ca7f518-a21a-4482-bdee-2e67abc9fe89",
              "parentUUID": "cf65ab44-6afc-43e8-8dff-0a2abdc98024",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User is not able to Register Using Empty Fields ",
              "fullTitle": "Registration Of ParaBank User User is not able to Register Using Empty Fields ",
              "timedOut": null,
              "duration": 5244,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const register = new _Register.default();\n//Click on Register Button on Home Page\nregister.ClickRegisterButtonHome();\n//Click in Register Button on register Page\nregister.ClickRegisterButton();\n//Validating that User is on Register Page\nregister.ValidateEmptyFields();",
              "err": {},
              "uuid": "910fcebe-3fd7-416a-86ca-ea62ac01d850",
              "parentUUID": "cf65ab44-6afc-43e8-8dff-0a2abdc98024",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "98a30afe-6c80-4c76-82e1-b217a913ad32",
            "910fcebe-3fd7-416a-86ca-ea62ac01d850"
          ],
          "failures": [
            "0ca7f518-a21a-4482-bdee-2e67abc9fe89"
          ],
          "pending": [],
          "skipped": [],
          "duration": 28502,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "reportFilename": "report",
        "charts": true,
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}
