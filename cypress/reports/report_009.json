{
  "stats": {
    "suites": 1,
    "tests": 10,
    "passes": 9,
    "pending": 0,
    "failures": 1,
    "start": "2023-04-27T08:53:25.039Z",
    "end": "2023-04-27T08:54:56.261Z",
    "duration": 91222,
    "testsRegistered": 10,
    "passPercent": 90,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "58d1dfaa-7796-4680-958e-7295d2d11e69",
      "title": "",
      "fullFile": "cypress\\e2e\\ParaBankTest\\AccountServices.cy.js",
      "file": "cypress\\e2e\\ParaBankTest\\AccountServices.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "859550a3-32d8-497a-8061-33dff434a5ff",
          "title": "Account Services",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Test Whether that User is able to open New Checked Account",
              "fullTitle": "Account Services Test Whether that User is able to open New Checked Account",
              "timedOut": null,
              "duration": 11981,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//use data from fixture file\ncy.fixture('AccountServices.json').then(acc => {\n  //Click on Register Button on Home Page\n  register.ClickRegisterButtonHome();\n  //Enter the Details for registration\n  register.setFirstName(acc.firstname);\n  register.setLastName(acc.lastname);\n  register.setAddress(acc.address);\n  register.setCity(acc.city);\n  register.setState(acc.state);\n  register.setZipCode(acc.zipcode);\n  register.setPhoneNumber(acc.phonenumber);\n  register.setSSN(acc.ssn);\n  register.setUserName(acc.username);\n  register.setPassword(acc.password);\n  register.setRepeatedPassword(acc.rpassword);\n  //Click in Register Button on register Page\n  register.ClickRegisterButton();\n  //Validate Account is registered Sucessfully or not\n  register.ValidateAfterSucessFullRegister();\n  //Click on Open Account\n  accser.clickOpenAccount();\n  //Select Checking Account from Account type Dropdown\n  accser.selectCheckingAccountType();\n  //Click on Open Account Button\n  accser.clickOpenAccountButton();\n  //Validate Account Created Sucessfully\n  accser.ValidateCheckingAccouuntText();\n});",
              "err": {},
              "uuid": "31e7aad9-1dab-4df8-961f-5c3e3ea28c6b",
              "parentUUID": "859550a3-32d8-497a-8061-33dff434a5ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test  Whether that User is able to open New Savings Account.",
              "fullTitle": "Account Services Test  Whether that User is able to open New Savings Account.",
              "timedOut": null,
              "duration": 8538,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//use data from fixture file\ncy.fixture('AccountServices.json').then(acc => {\n  //Enter Credentials for Login\n  login.setUserName(acc.usernamelog);\n  login.setPassword(acc.passwordlog);\n  //Click on Login Button\n  login.clickLogin();\n  //validate sucess Login after Weclome is visible\n  login.validateLoginWithWelcome();\n  //Click on Open Account\n  accser.clickOpenAccount();\n  //Select Checking Account from Account type Dropdown\n  accser.selectSavingsAccountType();\n  //Click on Open Account Button\n  accser.clickOpenAccountButton();\n  //Validate Account Created Sucessfully\n  accser.ValidateCheckingAccouuntText();\n});",
              "err": {},
              "uuid": "9cf31e9d-3625-4410-87dd-7fc06ef70fc6",
              "parentUUID": "859550a3-32d8-497a-8061-33dff434a5ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test Whether that User is able to Transfer the Funds From One Account to Another",
              "fullTitle": "Account Services Test Whether that User is able to Transfer the Funds From One Account to Another",
              "timedOut": null,
              "duration": 11657,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//use data from fixture file\ncy.fixture('AccountServices.json').then(acc => {\n  //Enter Credentials for Login\n  login.setUserName(acc.usernamelog);\n  login.setPassword(acc.passwordlog);\n  //Click on Login Button\n  login.clickLogin();\n  //validate sucess Login after Weclome is visible\n  login.validateLoginWithWelcome();\n  //Click on Transfer Fund\n  accser.clickTransferFund();\n  cy.wait(3000);\n  //Select Transfer Account\n  accser.SelectTransferAccount();\n  //Enter Transfer Amount\n  accser.TransferAmount(acc.transferamount);\n  //Click on Transfer Button\n  accser.ClickTransferButton();\n  //Validate Transfer Success text\n  accser.ValidateTransferText();\n});",
              "err": {},
              "uuid": "c9091460-8fbb-4d73-a35e-f63d8c0f69c9",
              "parentUUID": "859550a3-32d8-497a-8061-33dff434a5ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test Whether that User is able to Pay the Bill From One Account to Another",
              "fullTitle": "Account Services Test Whether that User is able to Pay the Bill From One Account to Another",
              "timedOut": null,
              "duration": 9410,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//use data from fixture file\ncy.fixture('AccountServices.json').then(acc => {\n  //Enter Credentials for Login\n  login.setUserName(acc.usernamelog);\n  login.setPassword(acc.passwordlog);\n  //Click on Login Button\n  login.clickLogin();\n  //validate sucess Login after Weclome is visible\n  login.validateLoginWithWelcome();\n  //Click on Bill Pay Link\n  accser.clickBillPay();\n  //Enter Payee Details\n  accser.setPayeeName(acc.payeename);\n  accser.setPayeeAddress(acc.payeeaddress);\n  accser.setPayeeCity(acc.payeecity);\n  accser.setPayeeState(acc.payeestate);\n  accser.setPayeeZipCode(acc.payeezipcode);\n  accser.setPayeePhoneNumber(acc.payeephone);\n  accser.setPayeeAccount(acc.payeeaccount);\n  accser.setPayeeVerifyAccount(acc.payeeverifyaccount);\n  accser.setPayeeAmmount(acc.payeeamount);\n  //Select Account to send Payment\n  accser.selectPayeeFromAccount();\n  //Click on Send Payment Button\n  accser.clickSendPayment();\n  //Validate Bill Payment Success text that bill payment is completed.\n  accser.ValidateBillPaymentText();\n});",
              "err": {},
              "uuid": "fbbf3a45-da4e-4bce-86ab-650bdae9dbc9",
              "parentUUID": "859550a3-32d8-497a-8061-33dff434a5ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test Whether that User is able to Find the Trascation by ID",
              "fullTitle": "Account Services Test Whether that User is able to Find the Trascation by ID",
              "timedOut": null,
              "duration": 4869,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//use data from fixture file\ncy.fixture('AccountServices.json').then(acc => {\n  //Enter Credentials for Login\n  login.setUserName(acc.usernamelog);\n  login.setPassword(acc.passwordlog);\n  //Click on Login Button\n  login.clickLogin();\n  //validate sucess Login after Weclome is visible\n  login.validateLoginWithWelcome();\n  //Click on Find Transcation Link\n  accser.ClickFindTransaction();\n  //Enter ID of Transcation \n  accser.SetTransactionID(acc.transactionid);\n  //Click on Find Transaction  Of ID button\n  accser.ClickFindTransactionID();\n  //Valdate Results\n  accser.ValidateTranscationResults();\n});",
              "err": {},
              "uuid": "9fb14e2b-a532-4e82-bd8d-de7b9cafe36b",
              "parentUUID": "859550a3-32d8-497a-8061-33dff434a5ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test Whether that User is able to Find the Trascation by Date",
              "fullTitle": "Account Services Test Whether that User is able to Find the Trascation by Date",
              "timedOut": null,
              "duration": 5089,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//use data from fixture file\ncy.fixture('AccountServices.json').then(acc => {\n  //Enter Credentials for Login\n  login.setUserName(acc.usernamelog);\n  login.setPassword(acc.passwordlog);\n  //Click on Login Button\n  login.clickLogin();\n  //validate sucess Login after Weclome is visible\n  login.validateLoginWithWelcome();\n  //Click on Find Transcation Link\n  accser.ClickFindTransaction();\n  //Enter Date of Transcation \n  accser.SetTransactionDate(acc.transactiondate);\n  //Click on Find Transaction  Of Date button\n  accser.ClickFindTransactionDate();\n  //Valdate Results\n  accser.ValidateTranscationResults();\n});",
              "err": {},
              "uuid": "916f0ff5-cee0-4bb4-b382-8d68bc1db0e5",
              "parentUUID": "859550a3-32d8-497a-8061-33dff434a5ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test Whether that User is able to Find the Trascation by Date Range",
              "fullTitle": "Account Services Test Whether that User is able to Find the Trascation by Date Range",
              "timedOut": null,
              "duration": 5012,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//use data from fixture file\ncy.fixture('AccountServices.json').then(acc => {\n  //Enter Credentials for Login\n  login.setUserName(acc.usernamelog);\n  login.setPassword(acc.passwordlog);\n  //Click on Login Button\n  login.clickLogin();\n  //validate sucess Login after Weclome is visible\n  login.validateLoginWithWelcome();\n  //Click on Find Transcation Link\n  accser.ClickFindTransaction();\n  //Enter Date's of Transcation \n  accser.SetTransactionDateFromRange(acc.fromdaterange);\n  accser.SetTransactionDateToRange(acc.todaterange);\n  //Click on Find Transaction  Of Date Range button\n  accser.ClickFindTransactionDateRange();\n  //Valdate Results\n  accser.ValidateTranscationResults();\n});",
              "err": {},
              "uuid": "c97d0630-e1e6-4150-ba90-02f9152d0c10",
              "parentUUID": "859550a3-32d8-497a-8061-33dff434a5ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test Whether that User is able to Find the Trascation by Amount",
              "fullTitle": "Account Services Test Whether that User is able to Find the Trascation by Amount",
              "timedOut": null,
              "duration": 5007,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//use data from fixture file\ncy.fixture('AccountServices.json').then(acc => {\n  //Enter Credentials for Login\n  login.setUserName(acc.usernamelog);\n  login.setPassword(acc.passwordlog);\n  //Click on Login Button\n  login.clickLogin();\n  //validate sucess Login after Weclome is visible\n  login.validateLoginWithWelcome();\n  //Click on Find Transcation Link\n  accser.ClickFindTransaction();\n  //Enter Date's of Transcation \n  accser.SetTransactionAmount(acc.transactionamount);\n  //Click on Find Transaction Of Amount button\n  accser.ClickFindTransactionAmount();\n  //Valdate Results\n  accser.ValidateTranscationResults();\n});",
              "err": {},
              "uuid": "227ee047-bfaa-41b6-83e9-3e4463c02258",
              "parentUUID": "859550a3-32d8-497a-8061-33dff434a5ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test Whether that User is able to Update the Contact Information",
              "fullTitle": "Account Services Test Whether that User is able to Update the Contact Information",
              "timedOut": null,
              "duration": 6657,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "//use data from fixture file\ncy.fixture('AccountServices.json').then(acc => {\n  //Enter Credentials for Login\n  login.setUserName(acc.usernamelog);\n  login.setPassword(acc.passwordlog);\n  //Click on Login Button\n  login.clickLogin();\n  //validate sucess Login after Weclome is visible\n  login.validateLoginWithWelcome();\n  //Click on Update Contact Info\n  accser.ClickUpdateContactInfo();\n  //Enter Updated Details\n  accser.setUpdateFirstName(acc.updatefname);\n  accser.setUpdateLastName(acc.updatelname);\n  accser.setUpdateAddress(acc.updateaddress);\n  accser.setUpdateCity(acc.updatecity);\n  accser.setUpdateState(acc.updatestate);\n  accser.setUpdateZipCode(acc.updatezipcode);\n  accser.setUpdatePhoneNumber(acc.updatepno);\n  //Click on Update Profile Button\n  accser.clickUpdateProfileButton();\n  //Validate Profile Text\n  accser.ValidateProfile();\n});",
              "err": {},
              "uuid": "9d189700-5c4d-4f24-9ffd-3166153d1d5d",
              "parentUUID": "859550a3-32d8-497a-8061-33dff434a5ff",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Test Whether that User is able to Request the Loan",
              "fullTitle": "Account Services Test Whether that User is able to Request the Loan",
              "timedOut": null,
              "duration": 10799,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "//use data from fixture file\ncy.fixture('AccountServices.json').then(acc => {\n  //Click on Admin Page link\n  admin.clickAdminPageLink();\n  //Enter Initial Balanace and Minimum balance for Configuration\n  admin.setInitBalance(acc.initbal);\n  admin.setMinimumBalance(acc.minbal);\n  //Click on Submit Button to submit Admin Settings\n  admin.SubmitAdmin();\n  //Enter Credentials for Login\n  login.setUserName(acc.usernamelog);\n  login.setPassword(acc.passwordlog);\n  //Click on Login Button\n  login.clickLogin();\n  //validate sucess Login after Weclome is visible\n  login.validateLoginWithWelcome();\n  //Click on Request Loan\n  accser.ClickRequestLoan();\n  //Enter Loan Amount \n  accser.setLoanAmount(acc.loanamt);\n  //Enter Down Payment Amount \n  accser.setDownPayment(acc.downpayment);\n  //Click on Apply Now\n  accser.ClickApplyNow();\n  //Validate Request Loan\n  accser.ValidateLoan();\n});",
              "err": {
                "message": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[ng-if='showResult'] > div.ng-scope > :nth-child(1)`, but never found it.",
                "estack": "AssertionError: Timed out retrying after 4000ms: Expected to find element: `[ng-if='showResult'] > div.ng-scope > :nth-child(1)`, but never found it.\n    at AccountServices.ValidateLoan (webpack:///./cypress/e2e/ParaBankPOM/AccountServices.js:292:11)\n    at Context.eval (webpack:///./cypress/e2e/ParaBankTest/AccountServices.cy.js:357:19)",
                "diff": null
              },
              "uuid": "037d97f3-0d3c-4507-aca3-4ee7916c5f96",
              "parentUUID": "859550a3-32d8-497a-8061-33dff434a5ff",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "31e7aad9-1dab-4df8-961f-5c3e3ea28c6b",
            "9cf31e9d-3625-4410-87dd-7fc06ef70fc6",
            "c9091460-8fbb-4d73-a35e-f63d8c0f69c9",
            "fbbf3a45-da4e-4bce-86ab-650bdae9dbc9",
            "9fb14e2b-a532-4e82-bd8d-de7b9cafe36b",
            "916f0ff5-cee0-4bb4-b382-8d68bc1db0e5",
            "c97d0630-e1e6-4150-ba90-02f9152d0c10",
            "227ee047-bfaa-41b6-83e9-3e4463c02258",
            "9d189700-5c4d-4f24-9ffd-3166153d1d5d"
          ],
          "failures": [
            "037d97f3-0d3c-4507-aca3-4ee7916c5f96"
          ],
          "pending": [],
          "skipped": [],
          "duration": 79019,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "reportFilename": "report",
        "charts": true,
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}